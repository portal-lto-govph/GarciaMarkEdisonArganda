"use strict";dermalog.dl_a_lto_common.dms={registerMaxFileSizeValidation:e=>{let s=[];let o="";e.hasOwnProperty("onSuccessCallback")||(console.error("onSuccessCallback is missing in object argument."),s.push(11)),s.includes(11)||"function"==typeof e.onSuccessCallback||(console.error("onSuccessCallback object argument is not a function."),s.push(12)),e.hasOwnProperty("onFailCallback")?"function"!=typeof e.onFailCallback&&(console.error("onFailCallback object argument is not a function."),s.push(13)):e.onFailCallback=(s=>{apex.message.clearErrors(),"NO_FILE_SELECTED"===s.type?apex.message.showErrors([{type:"error",location:["page","inline"],pageItem:e.fileUploadItemId,message:"Please select a file.",unsafe:!1}]):"FILE_TOO_BIG"===s.type?apex.message.showErrors([{type:"error",location:["page","inline"],pageItem:e.fileUploadItemId,message:`Maximum file size is ${e.maxFileSizeKB} KB.`,unsafe:!1}]):console.error(`Parameter for error type '${s.type}' is not supported`)}),e.hasOwnProperty("saveBtnId")||(console.error("DOM id of save button is missing in object argument."),s.push(1));const l=document.getElementById(e.saveBtnId);s.includes(1)||null!=l||(console.error("The save button tag does not exist."),s.push(2)),s.includes(1)||s.includes(2)||"button"==l.type||(console.error("The save button tag is does not have the type button."),s.push(3)),e.hasOwnProperty("fileUploadItemId")||(console.error("DOM id of file browser item is missing in object argument."),s.push(4));const n=document.getElementById(e.fileUploadItemId);s.includes(4)||null!=n||(console.error("The file upload tag is missing."),s.push(5)),s.includes(4)||s.includes(5)||"file"==n.type||(console.error("The file upload tag is does not have the type file."),s.push(6));const i=document.getElementById(`${e.fileUploadItemId}_CONTAINER`);s.includes(4)||null!=i||(console.error("The file upload apex item container is missing."),s.push(7)),window.FileReader||(console.error("The file API isn't supported on this browser yet."),s.push(8)),s.includes(5)||s.includes(6)||n.files||(console.error("This browser doesn't seem to support the `files` property of file inputs."),s.push(9)),e.hasOwnProperty("maxFileSizeKB")||(console.error("The parameter maxFileSizeKB is missing."),s.push(10)),e.hasOwnProperty("reuseable")||(console.error("The parameter reuseable is missing."),s.push(14)),s.includes(14)||"function"==typeof e.reuseable||(console.error("The parameter must be a function."),s.push(15)),s.includes(14)||s.includes(15)||"boolean"==typeof e.reuseable()||(console.error("The return value of the parameter function reusable must be boolean."),s.push(16)),0!=s.length&&(o=s.includes(8)||s.includes(9)?"The file upload feature is not supported by your browser.":"The file upload was configured incorrectly."),0==s.length||s.includes(1)||s.includes(2)||$(l).remove(),0==s.length||s.includes(4)||s.includes(7)?0==s.length||s.includes(4)||s.includes(5)||$(n).replaceWith(`<div>${o}</div>`):$(i).replaceWith(`<div>${o}</div>`),0==s.length&&$(l).on("click",s=>{if(e.reuseable())e.onSuccessCallback({uploadedFiles:{}});else if(0==n.files.length)e.onFailCallback({type:"NO_FILE_SELECTED"});else{const s=Object.keys(n.files).reduce((e,s)=>e+n.files[s].size/1024,0);s>parseFloat(e.maxFileSizeKB)?e.onFailCallback({type:"FILE_TOO_BIG",uploadedFileSizeKB:s,uploadedFiles:n.files}):e.onSuccessCallback({uploadedFiles:n.files})}})}};